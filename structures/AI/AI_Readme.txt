The AI In this branch is based on a graph tree where each node in the tree has a simulated gamestate, this sim state is manipulated as actions are performed in the AI file. These states and then re-evaluated to see if any other actions are available, due to the nature of the program this will exponentially create branches of the tree dipicting options possibly taken. as each node is created it is given an information representation of the state change that came before it, whether nothing or units have been moved etc, this info with all specifics is retained for use later eg target x, source y, etc.  It also retains the information to do with the relative changes to its own local gamestate that it is also given on creation. After the node has been created it then evaulates the gamestate and gives itself a goodness score. With these two pieces of information we can assess all nodes in the graph, see which one is best for us, and then recreate the actions taken via a path of nodes from the information representation of the state change. This allows the AI to pick the best option for the situation. 
If possible this would then be hooked into a turn generator that flipped the turns and assessed the human players options, and then again flipped to assess the responses to those situations. 
Issues: There is an issue where the AI runs out of memory for processing, there is definitly a bug somewhere deep in the code.
There is also an issue where the AI attempts to select a position that isnt represented on the board, this may be due to the concurrency issues faced, or may be more to do with the move-to-attack mechanic where units will automatically move closer to units that they can theoretically attack.
It is only working in simple situations but it is operating somewhat as intended. 
